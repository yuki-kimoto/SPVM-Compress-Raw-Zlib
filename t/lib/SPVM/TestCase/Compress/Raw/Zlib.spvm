class TestCase::Compress::Raw::Zlib {
  use Compress::Raw::Zlib;
  use Compress::Raw::Zlib::Constant as ZLIB;
  use Compress::Raw::Zlib::Deflate;
  use Compress::Raw::Zlib::Inflate;
  
  use Fn;
  
  static method test : int () {
    
    return 1;
  }
  
  static method deflate_small_buffer : int () {
    
    my $hello = "I am a HAL 9000 computer";
    
    my $deflate = Compress::Raw::Zlib::Deflate->new({"-Bufsize" => 1});
    
    unless ($deflate->total_in == 0) {
      return 0;
    }
    
    unless ($deflate->total_out == 0) {
      return 0;
    }
    
    my $output_all = "";
    for (my $i = 0; $i < length $hello; $i++) {
      
      my $ch = Fn->chr($hello->[$i]);
      
      my $status = $deflate->deflate($ch, my $_ = [(string)undef]);
      
      if (length $_->[0]) {
        $output_all .= $_->[0];
      }
    }
    
    $deflate->flush(my $_ = [(string)undef]);
    
    if (length $_->[0]) {
      $output_all .= $_->[0];
    }
    
    unless ($deflate->total_in == length $hello) {
      return 0;
    }
    
    unless ($deflate->total_out == length $output_all) {
      return 0;
    }
    
    return 1;
  }
}
